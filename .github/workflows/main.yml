name: Continuous Integration

on:
  workflow_run:
    workflows: ["Auto-update casks on new releases"]
    types:
      - completed
  pull_request:
    paths:
      - ".github/workflows/**"
      - "Casks/**"
  workflow_dispatch:
  schedule:
    # Run every Saturday at 1:30 AM UTC
    - cron: "30 1 * * 6"

jobs:
  detect_casks:
    runs-on: ubuntu-latest
    outputs:
      casks: ${{ steps.detect.outputs.casks }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Detect Casks to test
        id: detect
        run: |
          case "${{ github.event_name }}" in
          "pull_request")
            # For pull requests, check against the base branch
            changed=$(git diff --name-only origin/${{ github.base_ref }} HEAD | grep '^Casks/.*\.rb$' || true)
            ;;
          "workflow_run")
            # For pushes, check against the previous commit, but only if the previous commit is less than 1 hour old

            prev_commit_time=$(git show -s --format=%ct HEAD^)
            echo "Previous commit time: $prev_commit_time"

            now=$(date +%s)
            echo "Current time: $now"

            age=$(( now - prev_commit_time ))

            changed=""
            if [[ $age -lt 3600 ]]; then
              echo "Previous commit is less than 1 hour old, checking for changes."
              changed=$(git diff --name-only HEAD^ HEAD | grep '^Casks/.*\.rb$' || true)
            fi
            ;;
          *)
            # By default, include all Casks
            changed=$(find Casks -name '*.rb' || true)
            ;;
          esac

          if [[ -z "$changed" ]]; then
            echo "No cask changes detected."
            echo "casks=[]" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Convert filenames to just cask tokens (strip path & extension)
          tokens=$(echo "$changed" | sed -E 's|^Casks/||; s|\.rb$||')
          json=$(printf '%s\n' "$tokens" | jq -R . | jq -s -c .)

          echo "Detected casks: $json"
          echo "casks=$json" >> $GITHUB_OUTPUT

  test_casks:
    name: "${{ matrix.os }}: Test ${{ matrix.cask }}"
    needs: detect_casks
    if: ${{ needs.detect_casks.outputs.casks != '[]' && needs.detect_casks.outputs.casks != '' }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        cask: ${{ fromJson(needs.detect_casks.outputs.casks) }}
        os:
          - macos-13
          - macos-14
          - macos-15

    steps:
      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master
        with:
          stable: true
          test-bot: false

      - name: Cache Homebrew Gems
        id: cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.set-up-homebrew.outputs.gems-path }}
          key: ${{ matrix.os }}-rubygems-${{ steps.set-up-homebrew.outputs.gems-hash }}
          restore-keys: ${{ matrix.os }}-rubygems-

      - name: Install Homebrew Gems
        id: gems
        run: brew install-bundler-gems
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Style check cask
        run: brew style --cask "${{ matrix.cask }}"

      - name: Audit cask
        run: brew audit --cask --online --strict "${{ matrix.cask }}"

      - name: Install cask
        run: brew install --cask "${{ matrix.cask }}"

      - name: Uninstall cask
        run: brew uninstall --cask "${{ matrix.cask }}"
