name: Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:
    paths:
      - ".github/workflows/**"
      - "Casks/**"
  workflow_dispatch:
  schedule:
    # Run every Saturday at 1:30 AM UTC
    - cron: "30 1 * * 6"

jobs:
  detect_casks:
    runs-on: ubuntu-latest
    outputs:
      casks: ${{ steps.detect.outputs.casks }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Detect changed Casks in PRs
        if: github.event_name == 'pull_request'
        run: |
          changed=$(git diff --name-only origin/${{ github.base_ref }} HEAD | grep '^Casks/.*\.rb$' || true)

          if [[ -z "$changed" ]]; then
            echo "No cask changes detected."
            echo "casks=[]" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Convert filenames to just cask tokens (strip path & extension)
          tokens=$(echo "$changed" | sed -E 's|^Casks/||; s|\.rb$||')
          json=$(printf '%s\n' "$tokens" | jq -R . | jq -s .)
          
          echo "Detected casks: $json"
          echo "casks=$json" >> $GITHUB_OUTPUT

      - name: Detect changed Casks after push
        if: github.event_name == 'push'
        run: |
          changed=$(git diff --name-only HEAD^ HEAD | grep '^Casks/.*\.rb$' || true)

          if [[ -z "$changed" ]]; then
            echo "No cask changes detected."
            echo "casks=[]" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Convert filenames to just cask tokens (strip path & extension)
          tokens=$(echo "$casks" | sed -E 's|^Casks/||; s|\.rb$||')
          json=$(printf '%s\n' "$tokens" | jq -R . | jq -s .)

          echo "Detected casks: $json"
          echo "casks=$json" >> $GITHUB_OUTPUT

      - name: Default to all Casks
        if: github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          casks=$(find Casks -name '*.rb' -exec basename {} .rb \; | jq -R . | jq -s .)
          echo "casks=$casks" >> $GITHUB_OUTPUT

  ci-test:
    needs: detect_casks
    if: ${{ fromJson(needs.detect_casks.outputs.casks) != '[]' }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        cask: ${{ fromJson(needs.detect_casks.outputs.casks) }}
        os:
          - macos-13
          - macos-14
          - macos-15

    steps:
      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master
        with:
          stable: true
          test-bot: false

      - name: Cache Homebrew Gems
        id: cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.set-up-homebrew.outputs.gems-path }}
          key: ${{ matrix.os }}-rubygems-${{ steps.set-up-homebrew.outputs.gems-hash }}
          restore-keys: ${{ matrix.os }}-rubygems-

      - name: Install Homebrew Gems
        id: gems
        run: brew install-bundler-gems
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Link local tap into Homebrew
        run: |
          mkdir -p "$(brew --repo ${{ github.repository }})"
          rm -rf "$(brew --repo ${{ github.repository }})"
          ln -s "$GITHUB_WORKSPACE" "$(brew --repo ${{ github.repository }})"

      - name: Style check cask
        run: brew style --cask "${{ matrix.cask }}"

      - name: Audit cask
        run: brew audit --cask --online --strict "${{ matrix.cask }}"

      - name: Install cask
        run: brew install --cask "${{ matrix.cask }}"

      - name: Uninstall cask
        run: brew uninstall --cask "${{ matrix.cask }}"
